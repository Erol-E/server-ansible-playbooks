#Find temp password
- name: Get temporary MySQL root password
  shell: grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'
  register: mysql_root_temp_password
  tags:
    - mysql

#Setting new ROOT password
- name: Set the MySQL root password
  shell: mysqladmin -u root --password="{{ mysql_root_temp_password.stdout }}" password "{{ mysql.password }}"
  register: mysql.password_result
  when: mysql.password is defined and mysql.password != ""
  failed_when: "'(using password: NO)' in mysql.password_result.stderr"
  tags:
    - mysql

#Setting new ROOT password to authorization file
- name: setup MySQL password file
  template:
    src: root_my.cnf.j2
    dest: /root/.my.cnf
  when: mysql.password is defined and mysql_root_password != ""
  tags:
    - mysql

- name: removing empty password users
  mysql_user: 
    name="" 
    password="" 
    host={{ ansible_fqdn }} 
    priv=*.*:USAGE 
    state=absent 
    login_user=root 
    login_password={{ mysql.password }}
  when: mysql.password is defined and mysql.password != ""
  tags:
    - mysql

- name: removing the MySQL test database
  mysql_db: 
    db=test 
    state=absent 
    login_user=root 
    login_password={{ mysql.password }}
  tags:
    - mysql

- name: removing the MySQL preseed file
  file: 
    path=/root/mysql.seed 
    state=absent
  when: ansible_os_family == "Debian"